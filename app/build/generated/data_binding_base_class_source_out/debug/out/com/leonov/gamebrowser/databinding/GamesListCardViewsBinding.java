// Generated by view binder compiler. Do not edit!
package com.leonov.gamebrowser.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.leonov.gamebrowser.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class GamesListCardViewsBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ViewPager2 gameCardImage;

  @NonNull
  public final TextView gameCardTitle;

  @NonNull
  public final CardView gameCardView;

  @NonNull
  public final ImageView gameRecommendationImg;

  @NonNull
  public final ImageView metacriticIcon;

  @NonNull
  public final TextView metacriticText;

  @NonNull
  public final RecyclerView platformsList;

  @NonNull
  public final TextView releaseDate;

  private GamesListCardViewsBinding(@NonNull CardView rootView, @NonNull ViewPager2 gameCardImage,
      @NonNull TextView gameCardTitle, @NonNull CardView gameCardView,
      @NonNull ImageView gameRecommendationImg, @NonNull ImageView metacriticIcon,
      @NonNull TextView metacriticText, @NonNull RecyclerView platformsList,
      @NonNull TextView releaseDate) {
    this.rootView = rootView;
    this.gameCardImage = gameCardImage;
    this.gameCardTitle = gameCardTitle;
    this.gameCardView = gameCardView;
    this.gameRecommendationImg = gameRecommendationImg;
    this.metacriticIcon = metacriticIcon;
    this.metacriticText = metacriticText;
    this.platformsList = platformsList;
    this.releaseDate = releaseDate;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static GamesListCardViewsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static GamesListCardViewsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.games_list_card_views, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static GamesListCardViewsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.game_card_image;
      ViewPager2 gameCardImage = ViewBindings.findChildViewById(rootView, id);
      if (gameCardImage == null) {
        break missingId;
      }

      id = R.id.game_card_title;
      TextView gameCardTitle = ViewBindings.findChildViewById(rootView, id);
      if (gameCardTitle == null) {
        break missingId;
      }

      CardView gameCardView = (CardView) rootView;

      id = R.id.game_recommendation_img;
      ImageView gameRecommendationImg = ViewBindings.findChildViewById(rootView, id);
      if (gameRecommendationImg == null) {
        break missingId;
      }

      id = R.id.metacritic_icon;
      ImageView metacriticIcon = ViewBindings.findChildViewById(rootView, id);
      if (metacriticIcon == null) {
        break missingId;
      }

      id = R.id.metacritic_text;
      TextView metacriticText = ViewBindings.findChildViewById(rootView, id);
      if (metacriticText == null) {
        break missingId;
      }

      id = R.id.platforms_list;
      RecyclerView platformsList = ViewBindings.findChildViewById(rootView, id);
      if (platformsList == null) {
        break missingId;
      }

      id = R.id.release_date;
      TextView releaseDate = ViewBindings.findChildViewById(rootView, id);
      if (releaseDate == null) {
        break missingId;
      }

      return new GamesListCardViewsBinding((CardView) rootView, gameCardImage, gameCardTitle,
          gameCardView, gameRecommendationImg, metacriticIcon, metacriticText, platformsList,
          releaseDate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
